{
    "related_post": {
        "ts": "2020-07-06T23:18:55.136000",
        "user": "Caspar",
        "text": "```import xml.etree.ElementTree as ET # Use cElementTree or lxml if too slowOSM_FILE = stchas.osm # Replace this with your osm fileSAMPLE_FILE = sample1percent.osm\"k = 100 # Parameter: take every kth top level elementdef get_element(osm_file tags=(\\'node\\ \\'way\\ \\'relation\\')): Yield element if it is the right type of tag Reference: http://stackoverflow.com/questions/3095434/insertingnewlinesinxmlfilegeneratedviaxmletreeelementtreeinpython  context = iter(ET.iterparse(osm_file events=(\\'start\\ \\'end\\'))) _ root = next(context) for event elem in context: if event == \\'end\\ and elem.tag in tags: yield elem root.clear()with open(SAMPLE_FILE \\'wb\\') as output: output.write(\\'<?xml version=\"1.0 encoding=\"UTF8\"?>\\\\') output.write(\\'<osm>\\ \\') # Write every kth top level element for i element in enumerate(get_element(OSM_FILE)): if i % k == 0: output.write(ET.tostring(element encoding=\\'utf8\\')) output.write(\\'</osm>\\')```",
        "conversation_id": "362",
        "index": 824
    },
    "so_post": {
        "ts": "2020-07-06T23:18:55.136000",
        "user": "Caspar",
        "text": "```import xml.etree.ElementTree as ET # Use cElementTree or lxml if too slowOSM_FILE = stchas.osm # Replace this with your osm fileSAMPLE_FILE = sample1percent.osm\"k = 100 # Parameter: take every kth top level elementdef get_element(osm_file tags=(\\'node\\ \\'way\\ \\'relation\\')): Yield element if it is the right type of tag Reference: http://stackoverflow.com/questions/3095434/insertingnewlinesinxmlfilegeneratedviaxmletreeelementtreeinpython  context = iter(ET.iterparse(osm_file events=(\\'start\\ \\'end\\'))) _ root = next(context) for event elem in context: if event == \\'end\\ and elem.tag in tags: yield elem root.clear()with open(SAMPLE_FILE \\'wb\\') as output: output.write(\\'<?xml version=\"1.0 encoding=\"UTF8\"?>\\\\') output.write(\\'<osm>\\ \\') # Write every kth top level element for i element in enumerate(get_element(OSM_FILE)): if i % k == 0: output.write(ET.tostring(element encoding=\\'utf8\\')) output.write(\\'</osm>\\')```",
        "conversation_id": "362",
        "index": 824
    },
    "category": "Other",
    "comments": "the so URL is in the source code as reference in a comment",
    "meta": {
        "start_date": "2020-07-01T00:00:47.690000",
        "end_time": null,
        "channel_name": "python-general",
        "team_domain": "Python",
        "count": 165007
    }
}